1891版本是之前生产环境使用的稳定版本。此版本以后将添加缓存和支持分库分表和修改数据库连接, 为了效率，最好是用PHP5.4，至少是PHP5.3以上版本，慢慢不在支持PHP4等

// 创建全新的dpa的时候，即dpa库都没有的时候，需要手工添加 user、project表并添加原始数据

安装时一定要运行
/usr/bin/php /data0/htdocs/admin/dpa/main.php -d "do=fill_db_table_field&db_name=dpa&db_pwd=10y9c2U5&pro_type=system"
而运行任何代码都需求权限，权限在/data0/deve/Cookies/admin@ni9ni.com.txt 文件里面


在所有的business中，不要进行跳转动作，因为现在不仅仅是面向web方式，可能还有后台还有一些接口、还有monido()等等均不允许跳转
要跳转也全部在actionserver中进行跳转。

数据库是什么？有序化的低粒度数据（尽量逼近原子数据，但难以做到）。也是为了共享和方便管理的安全的数据集合

开发中的一些约定:

一、名称约定
do: 动作组成，由下面两部分组成
type_name: 表示操作种类或数据表名，将之前do的参数进行分解而来。例如project_add, template_list的project和template
action: 表示操作类型，主要是四种：list，add，edit，del

二、

1. 所有的数据均放到数据库中进行管理。几乎没有孤立的数据
2. 对数据库的操作大体包括增、删、改、查四项基本操作。
 1) 查对应的就是列表页面，即显示出来给我们看的，涉及到大量数据的时候分表以及每次记录最大id提高查询效率。
 2) 增就是在没有数据的表中增加记录或在有数据的表中多一条或几条。
 3) 改就是对已有的数据进行更新修改某些字段
 4) 删就是将已存在的数据移除。

注意：去掉表单项中的_PF_前缀，获取数据的时候前后端能保持一致性。省去很多麻烦

3. 程序编写过程中，所有的列表页面可以共用一些通用模板；增、改可以共用列表表单框；删除则异常简单。


4. 列表页-程序的一般步骤

5. 增加记录-程序的一般步骤
 显示表单框：
 1) 找到所要需要增加记录的那张表
 2) 找到有多少字段
 3) 自动列出数据项


 有数据提交的时候：
 1) 进行数据项合法性检验，并填充数据项
 2) 入库，同时进行发布，如果有模板设置的时候

6. 后台程序也需要事先注册一个用户，添加到$_SESSION数组中去，保持同web方式的一致性。
   后台程序默认的用户名是robot，


======  php.ini ==============================================================
为了性能考虑，建议将php.ini配置文件的设置关闭，$HTTP_*_VARS 完全不用，而用$_GET替代之。
register_long_arrays = Off

========php.ini end============================================================

父级元素的起始是1级，而不是0级。所以数组都是从1开始的array(1=>"p_id");



tempdef_list, 模板定义表就是我所说的字段定义表；---- 今后换成field_list(当前还有其他用途先不覆盖)
template_list, 模板列表就是我所说的表定义表。   ---- 今后换成table_list(当前还有其他用途先不覆盖)


---- 今天开始做权限管理，user的SESSION中存放有用户的权限数组。2011.7.9

---- 今天开始做抓取工作，抓取管理以后再弄。2011.7.23

抓取任务的细分：基于数据库存储的


我们的目标让用户也能在我们的服务器和自己的本地机器上面运行自己的数据。创建数据库（当前，用户一般是保存邮件、博客、微波等，但数据格式都是固定的）
等数据，我们希望用户能有更大的自由度，即可以创建类似数据库的权限，然后在里面存放一些有序化的数据，就像本地磁盘一样。

我们提供的就是用户可以在本地和服务器上同步数据。


-------- 关于用户本地储存数据的一些做法 ------
1. 能上网的情况下，用户可以在网站上浏览同时备份到本地（网络状态经常不稳定的用户），

2. 本地操作的时候，用后台程序进行网络通讯，进行同步数据到服务器（如果用户设置过）。采用统一的php接口进行认证以后，
   可以不停地传输数据。

3. 用户能非常轻易地搭建一个平台，而且安装非常方便，甚至比安装一般的软件（金山、卡巴斯基、微米）都方便。

4. 


------------------- 用户部分 ------
默认系统用户至少有robot，admin。两个用户，后台程序运行也可能涉及到权限，robot用户具备root权限，其id为1或2等。
robot id=10001
admin id=10002
grab  id=10003 最初创建系统的时候就这么insert产生的，以后将如此延续。
其他的用户id，将从6位数开始。100001十万零一开始计数。5位号码预留。


用户部分预留一些id出来。


关于用户权限的问题，在用户表的同一个数据库中定义用户拥有的权限和受限的权限，其中受限是有限，而拥有的次之，
即只要限制了，哪怕其他地方允许也是不能访问的。当然做到一致性也是在所难免的。


------------------- 工具程序 ------

例如，在已知了数据表以后，能点击以后，自动填充table_def和field_def数据表或者纠正这些数据表数据，保持一致性很有必要。而一个小小的按钮就能完成，
通常在每个项目都具备这样的功能。
自动校对table_def和field_def数据功能，并且只有系统管理员具备这样的权限。


-------------------- 抓取部分，-----

涉及到后台运行程序，并且具备队列运行机制。

-------------------- php程序管理部分，自动入库到资源表中，需要这样的php小工具完成这样的事情。------



=================================================

整个系统自生过程：
1. 先创建dpa库以及相应基本表，特别地project表，user表，user最基开始的用户有robot（后台机器人）、admin和grab（后台抓取机器人也可以不需要此用户）.还有table_field.sql的两张基本表
2. 有了基本表以后并且有登录用户admin就可以登录后台进行操作管理了。
3. 当创建抓取库的时候，自动用grab.sql进行填充基本表和数据，创建静态内容发布系统的时候，自动使用cms.sql进行填充；当创建资源库的时候，自动用file_dir_res.sql进行填充。
3. 


====================== define常量最好放到 $GLOBALS['cfg']中去，这样就能动态修改，程序更灵活 ==========
// 以后能动态修改，所以建议使用$GLOBALS；
// $cfg['Business_Path'] = 'WEB-INF/Business';
// $GLOBALS['cfg']['Business_Path'] = 'WEB-INF/Business';
=====================================

有几个保留字段，不允许外界建表的时候使用。包括 id,p_id,t_id,lastmodify,creator,createdate,createtime,mender,menddate,mendtime


==========
我们的目标是，一个人能完成很多人才能做的事情，而且非常好管理，
全部操作都在后台管理系统上进行。只要赋予相应的权限即可。
主要包括it技术文章(服务器管理、php程序开发)、财经数据等

============ 算法说明 ======
template_add和edit里面也添加了算法支持，即新建或者修改一张表的信息的时候，在表定义表中增加或修改记录，有可能的算法是发邮件或短信通知系统管理员，谁增加了表的记录条目
tempdef_add或edit也能添加算法支持，主要用于字段定义表中增加记录的时候有一些其他动作，例如告知管理员，这样的算法通常都是application类型的非实际字段。



====== 修改日志 ===
1.创建一个新的平台的时候，还需要修改两个配置文件mysql_config.ini和lang.php
2.创建cms的时候，cms.sql里面都是旧有设计，暂时不用那些表。
3.自动填充表定义表和字段定义表的方法进行优化，指定的全部融合到一起。
4.自动填充字段定义表的时候，如果字段有注释，则应该将注释放到Description自动重，同时字段中文名用注释的前半部分填充，以,.:;空格5个常见字符进行分割。注：禁止使用全角字符进行分割







======= 网站js使用说明 ========
采用jquery类库。为了便于浏览器缓存，因此调用统一的地址：(1.4.2版本  72k，gzip压缩以后27k)
http://img3.ni9ni.com/js/jquery.min.js 





==========  基因编程法 ===================
即本级id的父级祖父级信息也同样需要携带着，因为受到父级的影响，有时候还需要呈现父级的一些属性供增加文档时候的默认值。

有项目信息、表定义表携带上级信息，有些表级别的信息还是分开为几张表，例如表级别的表定义表，还有模板信息表

对于文档发布地址，一个文档可能有很多html模板进行呈现其信息，或者是呈现其部分字段信息，
可能有很多个外网url，url_1,url_2,....，同模板设计相关联，一个模板对应一个文档的发布url. 通常都只有一个url_1用。



=================================================


从十亿光年到0.1飞米
http://www.ufo-1.cn/lingyituili/61/    (基于图片的英文翻译)
http://scii.cn/knowledge/2006/0927/262.html



=================================================



============sql数据库操作算法典型应用============

[sql]
select {保存路径},{栏目名称},{级别} from {栏目配置} limit 1

[code]
$dbR = $a_arr['dbR'];

$column_path = '';
$column_name = '${所属栏目}';
$sub_column_name = '${所属子栏目}';

$sth_column = '';
if ('' != $sub_column_name){
  $dbR->table_name = '{栏目配置}';
  $sth_column = $dbR->GetOne("where {栏目名称}='$sub_column_name' order by id desc limit 1 ",'{保存路径}');
  //print_r($sth_column);
  if (!empty($sth_column)) {
    $sth_column = $sth_column['{保存路径}'];
  }else {
    $sth_column = '';
  }
}


$sql = "select {保存路径} from {栏目配置} where {栏目名称}='$column_name' order by id desc limit 1";
$column_path2=$dbR->query_plan($sql);
if (!empty($column_path2)) {
  $column_path2 = $column_path2[0]['{保存路径}'];
}else {
  $column_path2 = '';
}
if ('' != $sth_column && false===strpos($column_path2,$sth_column)) {
  $column_path = $column_path2.$sth_column;
}else if('' != $sth_column){
  $column_path = $sth_column;
}else {
  $column_path = $column_path2;
}

if ('' == $column_path )
{
  $column_path = "/news/";
}else {
  $column_path = str_replace('//','/',$column_path);
}



[html]
$column_path

----------
栏目页 发布相应的一些约定

------------------
算法的一些约定：
1. 尽量用CodeResult，${中文变量} 尽量用单引号。

2. 对于长变量，例如 ${正文} 可能包含有单双引号，需要进行转义，因此程序在替换的时候对于 '${正文}' 或 "${正文}" 要提取出来单独替换以后再处理。

3. " wen zhong shuo : ${正文}  " --- 这样可能涉及引号转义的变量，必须单独用变量放在外面 $l_con = '${正文}'; 这样的。
   
==========


无需进行字符实体的替换工作，除了用户提交的数据需要进行 htmlspecials转换一下。



DSN（数据来源名称）

